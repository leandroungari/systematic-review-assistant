{"version":3,"sources":["components/SideMenu.js","components/TableViewer.js","components/GenerateCSV.js","data/Date.js","data/Review.js","components/AllStudies.js","components/FirstSelection.js","components/FinalSelection.js","components/FinalResult.js","components/AddSearchDialog.js","components/ReviewPanel.js","components/Panel.js","components/NewReviewDialog.js","components/OpenReviewDialog.js","pages/Home.js","index.js"],"names":["SideMenu","options","this","props","react_default","a","createElement","className","index_es","map","_ref","index","type","name","action","button","key","onClick","primary","Component","TableViewer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changePage","event","newPage","setPage","changeRowsPerPage","setRowsPerPage","target","value","setState","page","rowsPerPage","state","_this2","_this$state","_this$props","rows","titles","undefined","length","style","display","width","height","justifyContent","alignItems","Typography_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","slice","row","renderRow","TableFooter_default","TablePagination_default","rowsPerPageOptions","colSpan","count","SelectProps","native","onChangePage","onChangeRowsPerPage","ActionsComponent","TablePaginationActions","handleFirstPageButtonClick","_this3","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","_this3$props","Math","max","ceil","theme","withTheme","_this$props2","flexDirection","IconButton_default","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","GenerateCSV","source","fields","filename","console","log","csv","JSONToCSV","parse","blob","Blob","saveAs","concat","margin","color","variant","monthname","review","RESULT_ACCEPT","RESULT_REJECT","init","title","researchers","description","goals","addCriterion","deleteCriterion","articles","first","second","result","showSystematicReview","firsts","baseSet","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","article","toConsumableArray","base","includes","id","_iterator","Symbol","iterator","next","done","err","return","getSystematicReview","JSON","stringify","openSystematicReview","data","getTitle","filter","addArticle","authors","year","abstract","booktitle","doi","bibtex","AllStudies","date","Date","getMonth","getDate","getFullYear","getHours","getMinutes","join","Grid_default","container","maxWidth","window","innerWidth","overflowX","TableViewer_TableViewer","_ref2","cursor","minWidth","padding","GenerateCSV_GenerateCSV","FirstSelection","processStatus","analysis","resultAnalysis","criterion","resultReview","calculateStatus","DoneAllOutlined_default","WarningOutlined_default","DoneOutlined_default","IndeterminateCheckBoxOutlined_default","_article","_this2$processStatus","_article2","_this2$processStatus2","align","FinalSelection","FinalResult","AddSearchDialog","onDrop","acceptedFiles","forEach","file","reader","FileReader","onload","fileAsText","loadFile","closeDialog","onabort","onerror","readAsText","visible","Dialog_default","open","onClose","DialogTitle_default","DialogContent_default","label","marginBottom","onChange","es","getRootProps","getInputProps","isDragActive","assign","classNames","dropzone--isActive","justify","marginTop","Button_default","ReviewPanel","showAddSearch","isAddSearchModalVisible","hideAddSearch","loadBibTexFile","text","entries","bibtextParser","toJSON","bibs","split","entry","_entry$entryTags","entryTags","author","Number","parseInt","tab","flexWrap","SideMenu_SideMenu","AllStudies_AllStudies","FirstSelection_FirstSelection","FinalSelection_FinalSelection","FinalResult_FinalResult","_ref3","_ref4","AddSearchDialog_AddSearchDialog","Panel","renderPanel","enable","ReviewPanel_ReviewPanel","opacity","NewReviewDialog","initReview","initializeReview","cancelReview","TextField_default","marginRight","multiline","rowsMax","OpenReviewDialog","openReview","Home","showDrawer","isDrawerVisible","hideDrawer","showNewReviewDialog","isNewReviewDialogVisible","hideNewReviewDialog","showOpenReviewDialog","isOpenReviewDialogVisible","hideOpenReviewDialog","isNewReviewActive","document","tabNumber","json","CssBaseline_default","AppBar_default","position","Toolbar_default","Menu_default","Tabs_default","marginLeft","newValue","Tab_default","Drawer_default","Panel_Panel","NewReviewDialog_NewReviewDialog","OpenReviewDialog_OpenReviewDialog","React","createMuiTheme","palette","light","main","dark","contrastText","secondary","typography","useNextVariants","ReactDOM","render","styles","Home_Home","getElementById"],"mappings":"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","file":"static/js/main.a4135443.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { List, ListItem, ListItemText, Divider } from \"@material-ui/core\";\n\nexport default class SideMenu extends Component {\n  render() {\n    const { options } = this.props;\n\n    return (\n      <div className=\"side-menu\">\n        <List>\n          {options.map(({ type, name, action }, index) =>\n            type === \"option\" ? (\n              <ListItem button key={name} onClick={action}>\n                <ListItemText primary={name} />\n              </ListItem>\n            ) : (\n              <Divider key={index} />\n            )\n          )}\n        </List>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { withTheme } from \"@material-ui/core/styles/\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TableHead from \"@material-ui/core/TableHead\";\n\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default class TableViewer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      rowsPerPage: 5\n    };\n  }\n\n  changePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  changeRowsPerPage = event => {\n    this.setRowsPerPage(event.target.value);\n  };\n\n  setPage = value => this.setState({ page: value });\n  setRowsPerPage = value => this.setState({ rowsPerPage: value });\n\n  render() {\n    const { page, rowsPerPage } = this.state;\n    const { rows, titles } = this.props;\n\n    if (rows === undefined || rows.length === 0) {\n      return (\n        <Grid\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            height: 400,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <Typography>Não há registros</Typography>\n        </Grid>\n      );\n    } else\n      return (\n        <Table>\n          <TableHead>\n            <TableRow>\n              {titles.map((a, index) => (\n                <TableCell key={index}>{a}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(row => this.props.renderRow(row))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, 50]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  native: true\n                }}\n                onChangePage={this.changePage}\n                onChangeRowsPerPage={this.changeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      );\n  }\n}\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    const { page } = this.props;\n    this.props.onChangePage(event, page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    const { page } = this.props;\n    this.props.onChangePage(event, page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    const { count, rowsPerPage } = this.props;\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(count / rowsPerPage) - 1)\n    );\n  };\n\n  render() {\n    const theme = withTheme();\n    const { count, page, rowsPerPage } = this.props;\n\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"Primeira Página\"\n        >\n          {theme.direction === \"rtl\" ? <LastPage /> : <FirstPage />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Página Anterior\"\n        >\n          {theme.direction === \"rtl\" ? (\n            <KeyboardArrowRight />\n          ) : (\n            <KeyboardArrowLeft />\n          )}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Próxima Página\"\n        >\n          {theme.direction === \"rtl\" ? (\n            <KeyboardArrowLeft />\n          ) : (\n            <KeyboardArrowRight />\n          )}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Última Página\"\n        >\n          {theme.direction === \"rtl\" ? <FirstPage /> : <LastPage />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { saveAs } from \"file-saver\";\n\nimport JSONToCSV from \"json2csv\";\nimport { Button } from \"@material-ui/core\";\n\nexport default class GenerateCSV extends Component {\n  onClick = () => {\n    const { source, fields, filename } = this.props;\n    console.log(source);\n    const csv = JSONToCSV.parse(source, { fields });\n    let blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\n\n    saveAs(blob, `${filename}.csv`);\n  };\n\n  render() {\n    return (\n      <Button\n        style={{ width: 180, margin: \"10px 0\" }}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={this.onClick}\n      >\n        Exportar CSV\n      </Button>\n    );\n  }\n}\n","const monthname = value => {\n  switch (value) {\n    case 0:\n      return \"Jan\";\n    case 1:\n      return \"Feb\";\n    case 2:\n      return \"Mar\";\n    case 3:\n      return \"Apr\";\n    case 4:\n      return \"May\";\n    case 5:\n      return \"Jun\";\n    case 6:\n      return \"Jul\";\n    case 7:\n      return \"Ago\";\n    case 8:\n      return \"Sep\";\n    case 9:\n      return \"Oct\";\n    case 10:\n      return \"Nov\";\n    case 11:\n      return \"Dec\";\n    default:\n      return null;\n  }\n};\n\nexport { monthname };\n","let review = {};\n\nconst FIRST_SET = \"first\";\nconst SECOND_SET = \"second\";\n\nconst RESULT_ACCEPT = true;\nconst RESULT_REJECT = false;\n\nconst init = (title, researchers, description, goals) => {\n  review = {\n    title,\n    researchers,\n    description,\n    goals,\n    addCriterion: [],\n    deleteCriterion: [],\n    articles: [],\n    first: [],\n    second: [],\n    result: []\n  };\n};\n\nconst showSystematicReview = () => {\n  console.log(review);\n};\n\nconst articles = () => {\n  return review.articles;\n};\n\nconst firsts = () => {\n  let titles = [];\n  review.first = [];\n  let baseSet = {};\n\n  for (const article of review.articles) {\n    baseSet[article.name] = [\n      ...(baseSet[article.name] ? baseSet[article.name] : []),\n      article.base\n    ];\n    if (titles.includes(article.name)) {\n      review.articles.map(a => a.name === article.name);\n    } else {\n      titles = [...titles, article.name];\n      review.first = [...review.first, { id: article.id }];\n    }\n  }\n\n  return review.first;\n};\nconst seconds = () => {\n  if (!review.first) return [];\n  review.second = review.first\n    .filter(\n      ({ analysis, review }) =>\n        analysis &&\n        review &&\n        analysis.result === RESULT_ACCEPT &&\n        review.researchers === RESULT_ACCEPT\n    )\n    .map(({ id }) => ({ id }));\n\n  return review.second;\n};\nconst results = () => {\n  if (!review.second) return [];\n  review.result = review.second\n    .filter(\n      ({ analysis, review }) =>\n        analysis &&\n        review &&\n        analysis.result === RESULT_ACCEPT &&\n        review.researchers === RESULT_ACCEPT\n    )\n    .map(({ id }) => ({ id }));\n\n  return review.result;\n};\n\nconst getSystematicReview = () => {\n  return JSON.stringify(review);\n};\n\nconst openSystematicReview = data => {\n  review = JSON.parse(data);\n};\n\nconst getTitle = () => {\n  return review.title;\n};\n\nconst article = id => review.articles.filter(a => a.id === id)[0];\n\nconst addArticle = (\n  name,\n  authors,\n  year,\n  base,\n  abstract,\n  booktitle,\n  doi,\n  bibtex\n) => {\n  const id = `${base}${review.articles.length}`;\n  review.articles = [\n    ...review.articles,\n    { id, name, authors, year, base: [base], abstract, booktitle, doi, bibtex }\n  ];\n};\n\nconst setAnalysis = (id, set, result, criterion) => {\n  review[set] = review[set].map(a => {\n    if (a.id === id) {\n      return {\n        id: a.id,\n        analysis: {\n          result,\n          criterion\n        }\n      };\n    } else return a;\n  });\n};\n\nconst setReview = (id, set, result, criterion) => {\n  review[set] = review[set].map(a => {\n    if (a.id === id) {\n      return {\n        id: a.id,\n        analysis: a.analysis,\n        review: {\n          result,\n          criterion\n        }\n      };\n    } else return a;\n  });\n};\n\nexport {\n  FIRST_SET,\n  SECOND_SET,\n  RESULT_ACCEPT,\n  RESULT_REJECT,\n  init,\n  addArticle,\n  article,\n  showSystematicReview,\n  setAnalysis,\n  setReview,\n  getSystematicReview,\n  getTitle,\n  openSystematicReview,\n  articles,\n  firsts,\n  seconds,\n  results\n};\n","import React, { Component } from \"react\";\nimport TableViewer from \"./TableViewer\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { Typography } from \"@material-ui/core\";\nimport GenerateCSV from \"./GenerateCSV\";\n\nimport { monthname } from \"../data/Date\";\nimport { getTitle } from \"../data/Review\";\n\nexport default class AllStudies extends Component {\n  render() {\n    const { articles } = this.props;\n\n    const date = new Date();\n    let filename = `${getTitle()} - Todos Estudos - ${monthname(\n      date.getMonth()\n    )} ${date.getDate()}, ${date.getFullYear()} ${date.getHours()}h${date.getMinutes()}min`;\n\n    const data = articles.map(\n      ({ name, authors, year, base, booktitle, doi }) => ({\n        name,\n        authors,\n        year,\n        base: base.join(\"/\"),\n        booktitle,\n        doi\n      })\n    );\n\n    return (\n      <Grid container>\n        <Grid\n          container\n          style={{\n            maxWidth: 0.75 * window.innerWidth,\n            overflowX: \"auto\"\n          }}\n        >\n          <TableViewer\n            rows={articles}\n            titles={[\n              \"Título\",\n              \"Autor(es)\",\n              \"Ano\",\n              \"Base Bibliográfica\",\n              \"Título do Livro\",\n              \"DOI\"\n            ]}\n            renderRow={({\n              id,\n              name,\n              authors,\n              year,\n              base,\n              abstract,\n              booktitle,\n              doi,\n              bibtex\n            }) => {\n              return (\n                <TableRow\n                  key={id}\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => console.log(id)}\n                >\n                  <TableCell style={{ minWidth: 350 }}>{name}</TableCell>\n                  <TableCell style={{ minWidth: 300 }}>{authors}</TableCell>\n                  <TableCell>{year}</TableCell>\n                  <TableCell>{base.join(\"/\")}</TableCell>\n                  <TableCell style={{ minWidth: 300 }}>{booktitle}</TableCell>\n                  <TableCell>{doi}</TableCell>\n                </TableRow>\n              );\n            }}\n          />\n        </Grid>\n        <Grid\n          container\n          direction=\"column\"\n          style={{\n            display: articles.length === 0 ? \"none\" : \"flex\",\n            padding: \"30px 0\"\n          }}\n        >\n          <Typography variant=\"body2\">Exportar os dados da tabela</Typography>\n          <GenerateCSV\n            source={data}\n            fields={[\"name\", \"authors\", \"year\", \"base\", \"booktitle\", \"doi\"]}\n            filename={filename}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport TableViewer from \"./TableViewer\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { article, RESULT_ACCEPT, RESULT_REJECT } from \"../data/Review\";\n\nimport DoneAllOutlined from \"@material-ui/icons/DoneAllOutlined\";\nimport DoneOutlined from \"@material-ui/icons/DoneOutlined\";\nimport WarningOutlined from \"@material-ui/icons/WarningOutlined\";\nimport IndeterminateCheckBoxOutlined from \"@material-ui/icons/IndeterminateCheckBoxOutlined\";\n\nimport { Typography } from \"@material-ui/core\";\nimport GenerateCSV from \"./GenerateCSV\";\n\nimport { monthname } from \"../data/Date\";\nimport { getTitle } from \"../data/Review\";\n\nexport default class FirstSelection extends Component {\n  processStatus = (analysis, review) => {\n    let resultAnalysis = \"\";\n    if (!analysis) resultAnalysis = \"Não analisado\";\n    else if (analysis.result) resultAnalysis = `Aceito:${analysis.criterion}`;\n    else resultAnalysis = `Excluído:${analysis.criterion}`;\n\n    let resultReview = \"\";\n    if (!review) resultReview = \"Não revisado\";\n    else if (review.result) resultReview = `Aceito:${review.criterion}`;\n    else resultReview = `Excluído:${review.criterion}`;\n\n    return { resultAnalysis, resultReview };\n  };\n\n  calculateStatus = (analysis, review) => {\n    if (!analysis && !review) return <IndeterminateCheckBoxOutlined />;\n    else if (\n      (analysis.result === RESULT_ACCEPT && review.result === RESULT_ACCEPT) ||\n      (analysis.result === RESULT_REJECT && review.result === RESULT_REJECT)\n    )\n      return <DoneAllOutlined />;\n    else if (\n      (analysis.result === RESULT_ACCEPT ||\n        analysis.result === RESULT_REJECT) &&\n      !review\n    )\n      return <DoneOutlined />;\n    else return <WarningOutlined />;\n  };\n\n  render() {\n    const { articles } = this.props;\n\n    const date = new Date();\n    let filename = `${getTitle()} - Seleção Inicial - ${monthname(\n      date.getMonth()\n    )} ${date.getDate()}, ${date.getFullYear()} ${date.getHours()}h${date.getMinutes()}min`;\n\n    const data = articles.map(({ id, analysis, review }) => {\n      const { name, authors, abstract, year, base } = article(id);\n      const { resultAnalysis, resultReview } = this.processStatus(\n        analysis,\n        review\n      );\n      return {\n        name,\n        abstract,\n        authors,\n        year,\n        base: base.join(\"/\"),\n        analysis: resultAnalysis,\n        review: resultReview\n      };\n    });\n\n    return (\n      <Grid container>\n        <Grid\n          container\n          style={{\n            maxWidth: 0.75 * window.innerWidth,\n            overflowX: \"auto\"\n          }}\n        >\n          <TableViewer\n            rows={articles}\n            titles={[\n              \"Status\",\n              \"Título\",\n              \"Resumo\",\n              \"Autor(es)\",\n              \"Ano\",\n              \"Base Bibliográfica\",\n              \"Análise\",\n              \"Revisão da Análise\"\n            ]}\n            renderRow={({ id, analysis, review }) => {\n              const { name, authors, abstract, year, base } = article(id);\n\n              const { resultAnalysis, resultReview } = this.processStatus(\n                analysis,\n                review\n              );\n\n              return (\n                <TableRow key={id}>\n                  <TableCell>\n                    {this.calculateStatus(analysis, review)}\n                  </TableCell>\n                  <TableCell\n                    style={{ minWidth: 300, cursor: \"pointer\" }}\n                    onClick={() => console.log(id)}\n                  >\n                    {name}\n                  </TableCell>\n                  <TableCell style={{ minWidth: 550 }} align=\"justify\">\n                    {abstract}\n                  </TableCell>\n                  <TableCell style={{ minWidth: 250 }}>{authors}</TableCell>\n                  <TableCell>{year}</TableCell>\n                  <TableCell>{base.join(\"/\")}</TableCell>\n                  <TableCell>{resultAnalysis}</TableCell>\n                  <TableCell>{resultReview}</TableCell>\n                </TableRow>\n              );\n            }}\n          />\n        </Grid>\n        <Grid\n          container\n          direction=\"column\"\n          style={{\n            display: articles.length === 0 ? \"none\" : \"flex\",\n            padding: \"30px 0\"\n          }}\n        >\n          <Typography variant=\"body2\">Exportar os dados da tabela</Typography>\n          <GenerateCSV\n            source={data}\n            fields={[\n              \"name\",\n              \"abstract\",\n              \"authors\",\n              \"year\",\n              \"base\",\n              \"analysis\",\n              \"review\"\n            ]}\n            filename={filename}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport TableViewer from \"./TableViewer\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { article, RESULT_ACCEPT, RESULT_REJECT } from \"../data/Review\";\n\nimport DoneAllOutlined from \"@material-ui/icons/DoneAllOutlined\";\nimport DoneOutlined from \"@material-ui/icons/DoneOutlined\";\nimport WarningOutlined from \"@material-ui/icons/WarningOutlined\";\nimport IndeterminateCheckBoxOutlined from \"@material-ui/icons/IndeterminateCheckBoxOutlined\";\n\nimport { Typography } from \"@material-ui/core\";\nimport GenerateCSV from \"./GenerateCSV\";\n\nimport { monthname } from \"../data/Date\";\nimport { getTitle } from \"../data/Review\";\n\nexport default class FinalSelection extends Component {\n  processStatus = (analysis, review) => {\n    let resultAnalysis = \"\";\n    if (!analysis) resultAnalysis = \"Não analisado\";\n    else if (analysis.result) resultAnalysis = `Aceito:${analysis.criterion}`;\n    else resultAnalysis = `Excluído:${analysis.criterion}`;\n\n    let resultReview = \"\";\n    if (!review) resultReview = \"Não revisado\";\n    else if (review.result) resultReview = `Aceito:${review.criterion}`;\n    else resultReview = `Excluído:${review.criterion}`;\n\n    return { resultAnalysis, resultReview };\n  };\n\n  calculateStatus = (analysis, review) => {\n    if (!analysis && !review) return <IndeterminateCheckBoxOutlined />;\n    else if (\n      (analysis.result === RESULT_ACCEPT && review.result === RESULT_ACCEPT) ||\n      (analysis.result === RESULT_REJECT && review.result === RESULT_REJECT)\n    )\n      return <DoneAllOutlined />;\n    else if (\n      (analysis.result === RESULT_ACCEPT ||\n        analysis.result === RESULT_REJECT) &&\n      !review\n    )\n      return <DoneOutlined />;\n    else return <WarningOutlined />;\n  };\n\n  render() {\n    const { articles } = this.props;\n\n    const date = new Date();\n    let filename = `${getTitle()} - Seleção Final - ${monthname(\n      date.getMonth()\n    )} ${date.getDate()}, ${date.getFullYear()} ${date.getHours()}h${date.getMinutes()}min`;\n\n    const data = articles.map(({ id, analysis, review }) => {\n      const { name, authors, year, base } = article(id);\n      const { resultAnalysis, resultReview } = this.processStatus(\n        analysis,\n        review\n      );\n      return {\n        name,\n        authors,\n        year,\n        base: base.join(\"/\"),\n        analysis: resultAnalysis,\n        review: resultReview\n      };\n    });\n\n    return (\n      <Grid container>\n        <Grid\n          container\n          style={{\n            maxWidth: 0.75 * window.innerWidth,\n            overflowX: \"auto\"\n          }}\n        >\n          <TableViewer\n            rows={articles}\n            titles={[\n              \"Status\",\n              \"Título\",\n              \"Autor(es)\",\n              \"Ano\",\n              \"Base Bibliográfica\",\n              \"Análise\",\n              \"Revisão da Análise\"\n            ]}\n            renderRow={({ id, analysis, review }) => {\n              const { name, authors, year, base } = article(id);\n\n              const { resultAnalysis, resultReview } = this.processStatus(\n                analysis,\n                review\n              );\n\n              return (\n                <TableRow key={id}>\n                  <TableCell>\n                    {this.calculateStatus(analysis, review)}\n                  </TableCell>\n                  <TableCell\n                    style={{ minWidth: 300, cursor: \"pointer\" }}\n                    onClick={() => console.log(id)}\n                  >\n                    {name}\n                  </TableCell>\n                  <TableCell style={{ minWidth: 250 }}>{authors}</TableCell>\n                  <TableCell>{year}</TableCell>\n                  <TableCell>{base.join(\"/\")}</TableCell>\n                  <TableCell>{resultAnalysis}</TableCell>\n                  <TableCell>{resultReview}</TableCell>\n                </TableRow>\n              );\n            }}\n          />\n        </Grid>\n        <Grid\n          container\n          direction=\"column\"\n          style={{\n            display: articles.length === 0 ? \"none\" : \"flex\",\n            padding: \"30px 0\"\n          }}\n        >\n          <Typography variant=\"body2\">Exportar os dados da tabela</Typography>\n          <GenerateCSV\n            source={data}\n            fields={[\"name\", \"authors\", \"year\", \"base\", \"analysis\", \"review\"]}\n            filename={filename}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TableViewer from \"./TableViewer\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { article } from \"../data/Review\";\n\nimport { Typography } from \"@material-ui/core\";\nimport GenerateCSV from \"./GenerateCSV\";\n\nimport { monthname } from \"../data/Date\";\nimport { getTitle } from \"../data/Review\";\n\nexport default class FinalResult extends Component {\n  render() {\n    const { articles } = this.props;\n\n    const date = new Date();\n    let filename = `${getTitle()} - Resultado Final - ${monthname(\n      date.getMonth()\n    )} ${date.getDate()}, ${date.getFullYear()} ${date.getHours()}h${date.getMinutes()}min`;\n\n    const data = articles.map(({ id }) => {\n      const { name, authors, year, base } = article(id);\n\n      return {\n        name,\n        authors,\n        year,\n        base: base.join(\"/\")\n      };\n    });\n\n    return (\n      <Grid container>\n        <Grid\n          container\n          style={{\n            maxWidth: 0.75 * window.innerWidth,\n            overflowX: \"auto\"\n          }}\n        >\n          <TableViewer\n            rows={articles}\n            titles={[\"Título\", \"Autor(es)\", \"Ano\", \"Base Bibliográfica\"]}\n            renderRow={({ id }) => {\n              const { name, authors, year, base } = article(id);\n\n              return (\n                <TableRow key={id}>\n                  <TableCell\n                    style={{ minWidth: 300, cursor: \"pointer\" }}\n                    onClick={() => console.log(id)}\n                  >\n                    {name}\n                  </TableCell>\n                  <TableCell style={{ minWidth: 250 }}>{authors}</TableCell>\n                  <TableCell>{year}</TableCell>\n                  <TableCell>{base.join(\"/\")}</TableCell>\n                </TableRow>\n              );\n            }}\n          />\n        </Grid>\n        <Grid\n          container\n          direction=\"column\"\n          style={{\n            display: articles.length === 0 ? \"none\" : \"flex\",\n            padding: \"30px 0\"\n          }}\n        >\n          <Typography variant=\"body2\">Exportar os dados da tabela</Typography>\n          <GenerateCSV\n            source={data}\n            fields={[\"name\", \"authors\", \"year\", \"base\"]}\n            filename={filename}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport classNames from \"classnames\";\nimport Dropzone from \"react-dropzone\";\nimport { TextField } from \"@material-ui/core\";\n\nexport default class AddSearchDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      base: \"\"\n    };\n  }\n\n  onDrop = acceptedFiles => {\n    const { base } = this.state;\n\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const fileAsText = reader.result;\n        // do whatever you want with the file content\n\n        this.props.loadFile(base, fileAsText);\n        this.props.closeDialog();\n      };\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n\n      reader.readAsText(file);\n    });\n  };\n\n  render() {\n    const { visible, closeDialog } = this.props;\n    return (\n      <Dialog open={visible} onClose={closeDialog}>\n        <DialogTitle>Adicionar Pesquisa</DialogTitle>\n        <DialogContent\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            width: 450,\n            padding: \"20px 30px 40px 30px\",\n            alignItems: \"flex-start\"\n          }}\n        >\n          <TextField\n            label=\"Base Bibliográfica\"\n            style={{\n              width: 180,\n              marginBottom: 40\n            }}\n            onChange={event => this.setState({ base: event.target.value })}\n          />\n          <Dropzone onDrop={this.onDrop}>\n            {({ getRootProps, getInputProps, isDragActive }) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  className={classNames(\"dropzone\", {\n                    \"dropzone--isActive\": isDragActive\n                  })}\n                >\n                  <input {...getInputProps()} />\n                  {isDragActive ? (\n                    <Typography>Arraste o arquivo aqui ...</Typography>\n                  ) : (\n                    <Typography>\n                      Arraste o(s) arquivo(s) .bib aqui ou clique para\n                      carregá-lo(s) ...\n                    </Typography>\n                  )}\n                </div>\n              );\n            }}\n          </Dropzone>\n          <Grid\n            container\n            justify=\"center\"\n            style={{\n              marginTop: 55\n            }}\n          >\n            <Button onClick={closeDialog} variant=\"contained\" color=\"primary\">\n              Cancelar\n            </Button>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SideMenu from \"./SideMenu\";\nimport AllStudies from \"./AllStudies\";\nimport FirstSelection from \"./FirstSelection\";\nimport FinalSelection from \"./FinalSelection\";\nimport FinalResult from \"./FinalResult\";\n\nimport AddSearchDialog from \"./AddSearchDialog\";\n\nimport bibtextParser from \"bibtex-parse-js\";\nimport {\n  addArticle,\n  showSystematicReview,\n  articles,\n  firsts,\n  seconds,\n  results\n} from \"../data/Review\";\n\nexport default class ReviewPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAddSearchModalVisible: false,\n      options: [\n        {\n          type: \"option\",\n          name: \"Adicionar Pesquisa\",\n          action: () => this.showAddSearch()\n        },\n        {\n          type: \"option\",\n          name: \"Critérios de Aceitação\",\n          action: () => console.log(\"aceitacao\")\n        },\n        {\n          type: \"option\",\n          name: \"Critérios de Rejeição\",\n          action: () => console.log(\"rejeicao\")\n        },\n        {\n          type: \"option\",\n          name: \"Mostrar Itens de Pesquisa Duplicados\",\n          action: () => {}\n        }\n      ]\n    };\n  }\n\n  showAddSearch = () => this.setState({ isAddSearchModalVisible: true });\n  hideAddSearch = () => this.setState({ isAddSearchModalVisible: false });\n\n  loadBibTexFile = (base, text) => {\n    const entries = bibtextParser.toJSON(text);\n    const bibs = text.split(\"@\").map(a => `@${a}`);\n\n    entries.forEach((entry, index) => {\n      const { abstract, author, booktitle, doi, title, year } = entry.entryTags;\n      addArticle(\n        title,\n        author,\n        Number.parseInt(year),\n        base,\n        abstract,\n        booktitle,\n        doi,\n        bibs[index]\n      );\n    });\n\n    showSystematicReview();\n  };\n\n  render() {\n    const { options, isAddSearchModalVisible } = this.state;\n    const { tab } = this.props;\n\n    return (\n      <Grid\n        container\n        style={{\n          display: \"flex\",\n          flexWrap: \"nowrap\",\n          flexDirection: \"row\"\n        }}\n      >\n        <Grid\n          container\n          style={{\n            width: 0.2 * window.innerWidth\n          }}\n        >\n          <SideMenu options={options} />\n        </Grid>\n        <Grid\n          style={{\n            width: 0.8 * window.innerWidth,\n            padding: \"25px 20px\"\n          }}\n        >\n          {tab === 0 && <AllStudies articles={articles()} />}\n          {tab === 1 && <FirstSelection articles={firsts()} />}\n          {tab === 2 && <FinalSelection articles={seconds()} />}\n          {tab === 3 && <FinalResult articles={results()} />}\n        </Grid>\n        <AddSearchDialog\n          closeDialog={this.hideAddSearch}\n          visible={isAddSearchModalVisible}\n          loadFile={this.loadBibTexFile}\n        />\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ReviewPanel from \"./ReviewPanel\";\n\nexport default class Panel extends Component {\n  renderPanel = () => {\n    const { enable, tab } = this.props;\n\n    if (enable) {\n      return <ReviewPanel tab={tab} />;\n    } else {\n      return (\n        <Grid\n          container\n          style={{\n            width: window.innerWidth,\n            height: 400,\n            opacity: 0.5\n          }}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <Typography variant=\"body1\">\n            Para começar, crie uma nova revisão.\n          </Typography>\n        </Grid>\n      );\n    }\n  };\n\n  render() {\n    return <div className=\"panel\">{this.renderPanel()}</div>;\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { init, showSystematicReview } from \"../data/Review\";\n\nexport default class NewReviewDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.title = {\n      title: \"\",\n      researchers: \"\",\n      goals: \"\",\n      description: \"\"\n    };\n  }\n\n  initReview = () => {\n    const { title, description, researchers, goals } = this.state;\n    const { initializeReview } = this.props;\n    init(title, researchers, description, goals);\n    initializeReview();\n    showSystematicReview();\n  };\n\n  cancelReview = () => {\n    this.props.closeDialog();\n  };\n\n  render() {\n    const { visible, closeDialog } = this.props;\n\n    return (\n      <Dialog open={visible} onClose={closeDialog}>\n        <DialogTitle>Nova Revisão</DialogTitle>\n        <DialogContent\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            padding: \"20px 20px 40px 20px\",\n            alignItems: \"center\"\n          }}\n        >\n          <form\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              width: 400,\n              padding: \"0 30px\"\n            }}\n          >\n            <Grid container style={{ marginBottom: 20 }}>\n              <TextField\n                style={{ marginRight: 15, width: 150 }}\n                label=\"Título\"\n                onChange={event => this.setState({ title: event.target.value })}\n              />\n              <TextField\n                style={{ width: 150 }}\n                label=\"Pesquisador(es)\"\n                onChange={event =>\n                  this.setState({ researchers: event.target.value })\n                }\n              />\n            </Grid>\n            <TextField\n              style={{ marginBottom: 8 }}\n              label=\"Descrição\"\n              multiline={true}\n              rowsMax={3}\n              onChange={event =>\n                this.setState({ description: event.target.value })\n              }\n            />\n            <TextField\n              style={{ marginBottom: 8 }}\n              label=\"Objetivos\"\n              multiline={true}\n              rowsMax={3}\n              onChange={event => this.setState({ goals: event.target.value })}\n            />\n          </form>\n          <Grid\n            container\n            justify=\"space-between\"\n            style={{\n              width: 220,\n              marginTop: 25\n            }}\n          >\n            <Button\n              onClick={this.initReview}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Criar\n            </Button>\n            <Button\n              onClick={this.cancelReview}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Cancelar\n            </Button>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport classNames from \"classnames\";\nimport Dropzone from \"react-dropzone\";\n\nexport default class OpenReviewDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  onDrop = acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const fileAsText = reader.result;\n        // do whatever you want with the file content\n\n        this.props.openReview(fileAsText);\n        this.props.closeDialog();\n      };\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n\n      reader.readAsText(file);\n    });\n  };\n\n  render() {\n    const { visible, closeDialog } = this.props;\n    return (\n      <Dialog open={visible} onClose={closeDialog}>\n        <DialogTitle>Abrir Revisão</DialogTitle>\n        <DialogContent\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            padding: \"20px 30px 40px 30px\",\n            alignItems: \"center\"\n          }}\n        >\n          <Dropzone onDrop={this.onDrop}>\n            {({ getRootProps, getInputProps, isDragActive }) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  className={classNames(\"dropzone\", {\n                    \"dropzone--isActive\": isDragActive\n                  })}\n                >\n                  <input {...getInputProps()} />\n                  {isDragActive ? (\n                    <Typography>Arraste o arquivo aqui ...</Typography>\n                  ) : (\n                    <Typography>\n                      Arraste o arquivo aqui ou clique para carregá-lo ...\n                    </Typography>\n                  )}\n                </div>\n              );\n            }}\n          </Dropzone>\n          <Grid\n            container\n            justify=\"center\"\n            style={{\n              width: 220,\n              marginTop: 55\n            }}\n          >\n            <Button onClick={closeDialog} variant=\"contained\" color=\"primary\">\n              Cancelar\n            </Button>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\n\nimport Menu from \"@material-ui/icons/Menu\";\n\nimport Panel from \"../components/Panel\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport SideMenu from \"../components/SideMenu\";\n\nimport NewReviewDialog from \"../components/NewReviewDialog\";\nimport OpenReviewDialog from \"../components/OpenReviewDialog\";\n\nimport { saveAs } from \"file-saver\";\nimport {\n  getSystematicReview,\n  getTitle,\n  openSystematicReview,\n  showSystematicReview\n} from \"../data/Review\";\nimport { monthname } from \"../data/Date\";\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    document.title = \"Systematic Review Assistant\";\n\n    this.state = {\n      isNewReviewActive: false,\n      isNewReviewDialogVisible: false,\n      isOpenReviewDialogVisible: false,\n\n      isDrawerVisible: false,\n\n      tabNumber: 0,\n\n      options: [\n        {\n          type: \"option\",\n          name: \"Nova revisão ...\",\n          action: () => {\n            this.hideDrawer();\n            this.showNewReviewDialog();\n          }\n        },\n        {\n          type: \"option\",\n          name: \"Salvar como ...\",\n          action: () => {\n            let date = new Date();\n\n            let filename = `${getTitle()} - ${monthname(\n              date.getMonth()\n            )} ${date.getDate()}, ${date.getFullYear()} ${date.getHours()}h${date.getMinutes()}min`;\n\n            let json = getSystematicReview();\n            let blob = new Blob([json], { type: \"text/json;charset=utf-8\" });\n\n            saveAs(blob, `${filename}.json`);\n\n            this.hideDrawer();\n          }\n        },\n        { type: \"divider\" },\n        {\n          type: \"option\",\n          name: \"Abrir\",\n          action: () => {\n            this.hideDrawer();\n            this.showOpenReviewDialog();\n          }\n        },\n        { type: \"divider\" },\n        {\n          type: \"option\",\n          name: \"Sobre\",\n          action: () => console.log(\"Sobre\")\n        }\n      ]\n    };\n  }\n\n  showDrawer = () => this.setState({ isDrawerVisible: true });\n  hideDrawer = () => this.setState({ isDrawerVisible: false });\n\n  showNewReviewDialog = () => this.setState({ isNewReviewDialogVisible: true });\n  hideNewReviewDialog = () =>\n    this.setState({ isNewReviewDialogVisible: false });\n\n  showOpenReviewDialog = () =>\n    this.setState({ isOpenReviewDialogVisible: true });\n  hideOpenReviewDialog = () =>\n    this.setState({ isOpenReviewDialogVisible: false });\n\n  initializeReview = () => {\n    this.setState({ isNewReviewActive: true });\n    this.hideNewReviewDialog();\n  };\n\n  openReview = data => {\n    openSystematicReview(data);\n    showSystematicReview();\n    this.setState({ isNewReviewActive: true });\n  };\n\n  render() {\n    const {\n      isNewReviewActive,\n      isDrawerVisible,\n      options,\n      isNewReviewDialogVisible,\n      isOpenReviewDialogVisible,\n      tabNumber\n    } = this.state;\n\n    return (\n      <div>\n        <CssBaseline />\n        <AppBar\n          position=\"static\"\n          style={{ display: \"flex\", flexDirection: \"row\" }}\n        >\n          <Toolbar>\n            <IconButton color=\"inherit\" onClick={this.showDrawer}>\n              <Menu />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Systematic Review Assistant\n            </Typography>\n          </Toolbar>\n          <Tabs\n            style={{\n              display: isNewReviewActive ? \"flex\" : \"none\",\n              marginLeft: \"150px\",\n              alignItems: \"flex-end\"\n            }}\n            value={tabNumber}\n            onChange={(event, newValue) => {\n              this.setState({ tabNumber: newValue });\n            }}\n          >\n            <Tab label=\"Todos Estudos\" />\n            <Tab label=\"Seleção Inicial\" />\n            <Tab label=\"Seleção Final\" />\n            <Tab label=\"Resultado Final\" />\n          </Tabs>\n        </AppBar>\n        <Drawer open={isDrawerVisible} onClose={this.hideDrawer}>\n          <SideMenu options={options} />\n        </Drawer>\n        <Panel enable={isNewReviewActive} tab={tabNumber} />\n\n        <NewReviewDialog\n          closeDialog={this.hideNewReviewDialog}\n          visible={isNewReviewDialogVisible}\n          initializeReview={this.initializeReview}\n        />\n        <OpenReviewDialog\n          closeDialog={this.hideOpenReviewDialog}\n          visible={isOpenReviewDialogVisible}\n          openReview={this.openReview}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Home from \"./pages/Home\";\n\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#4dabf5\",\n      main: \"#2196f3\",\n      dark: \"#1769aa\",\n      contrastText: \"#fff\"\n    },\n    secondary: {\n      light: \"#ab003c\",\n      main: \"#f50057\",\n      dark: \"#ab003c\",\n      contrastText: \"#000\"\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <Home />\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}